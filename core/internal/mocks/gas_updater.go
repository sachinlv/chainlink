// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	eth "github.com/smartcontractkit/chainlink/core/eth"
	mock "github.com/stretchr/testify/mock"

	models "github.com/smartcontractkit/chainlink/core/store/models"
)

// GasUpdater is an autogenerated mock type for the GasUpdater type
type GasUpdater struct {
	mock.Mock
}

// Connect provides a mock function with given fields: _a0
func (_m *GasUpdater) Connect(_a0 *models.Head) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Head) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Disconnect provides a mock function with given fields:
func (_m *GasUpdater) Disconnect() {
	_m.Called()
}

// OnNewHead provides a mock function with given fields: _a0
func (_m *GasUpdater) OnNewHead(_a0 *models.Head) {
	_m.Called(_a0)
}

// RollingBlockHistory provides a mock function with given fields:
func (_m *GasUpdater) RollingBlockHistory() []eth.Block {
	ret := _m.Called()

	var r0 []eth.Block
	if rf, ok := ret.Get(0).(func() []eth.Block); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]eth.Block)
		}
	}

	return r0
}
