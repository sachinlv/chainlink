name: Continuous Integration Workflow

on: [push]

jobs:
  go-postgres:
    name: Go Postgres
    runs-on: self-hosted
    container: smartcontract/builder:1.0.29
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: $${{ secrets.CACHE_VERSION}}-yarn-$${ hashFiles('yarn.lock') }}
          restore-keys: |
            $${{ secrets.CACHE_VERSION}}-yarn
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Cache Go vendor packages
        uses: actions/cache@v1
        with:
          path: /go/pkg/mod
          key: $${{ secrets.CACHE_VERSION }}-go-mod-$${ hashFiles('go.sum') }}
          restore-keys: |
            $${{ secrets.CACHE_VERSION }}-go-mod
      - name: Download Go vendor packages
        run: go mod download
      - name: Set up Yarn for Contracts
        run: yarn setup:contracts
      - name: Run tests
        run: go test -v -p 3 -parallel 2 ./...
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable

  rust:
    name: Rust
    runs-on: ubuntu-latest
    container:
      image: smartcontract/builder:1.0.31
      env:
        CARGO_HOME: /root/.cargo
        RUSTUP_HOME: /root/.rustup
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run Rust test
        run: ./tools/ci/rust_test

  geth-postgres:
    name: Geth Postgres
    runs-on: self-hosted
    env:
      GETH_MODE: true
      CI: true
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run tests
        run: cd ./tools/docker && timeout --foreground 1200s ./compose test

  parity-postgres:
    name: Parity Postgres
    runs-on: self-hosted
    env:
      CI: true
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run tests
        run: cd ./tools/docker && timeout --foreground 1200s ./compose test

  solidity:
    name: Solidity
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.29
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: $${{ secrets.CACHE_VERSION}}-yarn-$${ hashFiles('yarn.lock') }}
          restore-keys: |
            $${{ secrets.CACHE_VERSION}}-yarn
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Cache Python dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: $${{ secrets.CACHE_VERSION}}-pip-$${ hashFiles('requirements.txt') }}
          restore-keys: |
            $${{ secrets.CACHE_VERSION}}-pip
      - name: Install python packages
        run: pip3 install -r requirements.txt
      - name: Run tests
        run: ./tools/ci/solidity_test

  styleguide:
    name: Styleguide
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.29
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: $${{ secrets.CACHE_VERSION}}-yarn-$${ hashFiles('yarn.lock') }}
          restore-keys: |
            $${{ secrets.CACHE_VERSION}}-yarn
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run styleguide tests
        run: yarn workspace @chainlink/styleguide test

  json-api-client:
    name: JSON API client
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.29
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: $${{ secrets.CACHE_VERSION}}-yarn-$${ hashFiles('yarn.lock') }}
          restore-keys: |
            $${{ secrets.CACHE_VERSION}}-yarn
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run JSON API client tests
        run: yarn workspace @chainlink/json-api-client test

  operator-ui:
    name: Operator UI
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.29
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: $${{ secrets.CACHE_VERSION}}-yarn-$${ hashFiles('yarn.lock') }}
          restore-keys: |
            $${{ secrets.CACHE_VERSION}}-yarn
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run Operator UI tests
        run: ./tools/ci/operator_ui_test

  explorer:
    name: Explorer
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.29
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    env:
      TYPEORM_NAME: ci
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: $${{ secrets.CACHE_VERSION}}-yarn-$${ hashFiles('yarn.lock') }}
          restore-keys: |
            $${{ secrets.CACHE_VERSION}}-yarn
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run Yarn migrations
        run: yarn workspace @chainlink/explorer test:migration:run
      - name: Run Server Tests
        run: yarn workspace @chainlink/explorer test:ci
      - name: Run Client dependency setup
        run: yarn workspace @chainlink/explorer-client setup
      - name: Run Client tests
        run: yarn workspace @chainlink/explorer-client test:ci

  feeds:
    name: Feeds
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.29
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: $${{ secrets.CACHE_VERSION}}-yarn-$${ hashFiles('yarn.lock') }}
          restore-keys: |
            $${{ secrets.CACHE_VERSION}}-yarn
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run Feeds setup
        run: yarn workspace @chainlink/feeds setup
      - name: Run Feeds tests
        run: yarn workspace @chainlink/feeds test
        env:
          CI: true

  reportcoverage:
    name: Report test coverage
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.29
    needs: [go-postgres, solidity, operator-ui, rust, explorer]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Init GCloud
        run: ./tools/ci/init_gcloud
      - name: Run coverage report
        run: ./tools/ci/report_coverage

  check_if_rebase_needed:
    name: Check if rebase needed
    runs-on: ubuntu-latest
    container: alpine/git
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Check if rebase is needed
        run: tools/bin/check_if_rebase_needed

  lint:
    name: Yarn lint
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.29
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: $${{ secrets.CACHE_VERSION}}-yarn-$${ hashFiles('yarn.lock') }}
          restore-keys: |
            $${{ secrets.CACHE_VERSION}}-yarn
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run Yarn lint
        run: yarn lint

  prepublish_npm:
    name: Prepublish NPM
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.29
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: $${{ secrets.CACHE_VERSION}}-yarn-$${ hashFiles('yarn.lock') }}
          restore-keys: |
            $${{ secrets.CACHE_VERSION}}-yarn
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run prepublish NPM test
        run: ./tools/ci/prepublish_npm_test

